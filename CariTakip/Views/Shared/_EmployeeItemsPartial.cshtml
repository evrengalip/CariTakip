@model IEnumerable<Entities.Entities.EmployeeItem>
@using System.Globalization
@{
    var totalDebt = ViewBag.TotalDebt ?? 0; // Varsayılan olarak 0 kullan
    var totalPaidAmount = ViewBag.TotalPaidAmount ?? 0; // Varsayılan olarak 0 kullan
}

<!-- jQuery ve Bootstrap -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<!-- DataTables CSS ve JS -->
<link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css">
<link rel="stylesheet" href="https://cdn.datatables.net/buttons/1.7.1/css/buttons.dataTables.min.css">
<script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.7.1/js/dataTables.buttons.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.7.1/js/buttons.html5.min.js"></script>

<style>
    /* Özelleştirilmiş buton stil */
    .btn-custom {
        margin: 5px;
    }

    /* Modal stil */
    .modal-content {
        border-radius: 8px;
    }

    /* Excel Butonunu Sağda Konumlandırma */
    .btn-export {
        float: right;
    }
</style>

<p>
    <!-- Excel'e Aktar Butonu -->
    <button class="btn btn-success btn-custom btn-export" onclick="window.location.href='@Url.Action("Export", new { employeeId = ViewBag.SelectedEmployeeId })'">Excel'e Aktar</button>
</p>
<hr />
@if (Model != null && Model.Any())
{
    <table id="employeeItemTable" class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>Item Name</th>
                <th>Price</th>
                <th>Total Paid Amount</th>
                <th>Date Taken</th>
                <th>Payment Date</th>
                <th>Remaining Debt</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Item.Name</td>
                    <td>@item.Item.Price.ToString("C", CultureInfo.CurrentCulture)</td>
                    <td>@item.TotalPaidAmount.ToString("C", CultureInfo.CurrentCulture)</td>
                    <td>@item.DateTaken.ToShortDateString()</td>
                    <td>@item.PaymentDate?.ToString("dd.MM.yyyy")</td>
                    <td>@((item.Item.Price - item.TotalPaidAmount).ToString("C", CultureInfo.CurrentCulture))</td>
                    <td>
                        <button class="btn btn-primary btn-sm" data-toggle="modal" data-target="#editItemModal" data-id="@item.EmployeeItemId" data-name="@item.Item.Name" data-price="@item.Item.Price" data-paidamount="@item.TotalPaidAmount" data-paymentdate="@item.PaymentDate">Edit</button>
                        <button class="btn btn-danger btn-sm" onclick="deleteItem(@item.EmployeeItemId)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No data available.</p>
}

<div class="mt-3 text-end">
    <strong>Toplam Ödenen Para:</strong> <span>@totalPaidAmount.ToString("C", CultureInfo.CurrentCulture)</span>
</div>

<div class="mt-3 text-end">
    <strong>Toplam Kalan Borç:</strong> <span>@totalDebt.ToString("C", CultureInfo.CurrentCulture)</span>
</div>

<!-- Edit Item Modal -->
<div class="modal fade" id="editItemModal" tabindex="-1" role="dialog" aria-labelledby="editItemModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editItemModalLabel">Edit Item</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editItemForm">
                    <input type="hidden" id="editEmployeeItemId" name="EmployeeItemId" />
                    <input type="hidden" id="editItemPrice" name="ItemPrice" />

                    <div class="form-group">
                        <label for="editItemName">Item Name</label>
                        <input type="text" class="form-control" id="editItemName" name="ItemName" readonly />
                    </div>
                    <div class="form-group">
                        <label for="editPrice">Price</label>
                        <input type="text" class="form-control" id="editPrice" name="Price" readonly />
                    </div>
                    <div class="form-group">
                        <label for="editPaidAmount">Paid Amount</label>
                        <input type="text" class="form-control" id="editPaidAmount" name="PaidAmount" />
                    </div>
                    <div class="form-group">
                        <label for="editPaymentDate">Payment Date</label>
                        <input type="datetime-local" class="form-control" id="editPaymentDate" name="PaymentDate" />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveEditButton">Save changes</button>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $('#employeeItemTable').DataTable({
            "order": [[3, "desc"]], // 3. sütunu (Taken Time) azalan sıraya göre sırala
            "paging": true, // Sayfalama
            "lengthChange": false, // Sayfa başına satır sayısını değiştirmeyi devre dışı bırak
            "searching": true, // Arama kutusunu etkinleştir
            "info": true, // Bilgi alanını göster
            "autoWidth": false, // Otomatik genişlik ayarını devre dışı bırak
            "responsive": true, // Duyarlı tasarım
            "language": {
                "lengthMenu": "Göster _MENU_ giriş",
                "zeroRecords": "Kayıt bulunamadı",
                "info": "Sayfa _PAGE_ / _PAGES_",
                "infoEmpty": "Kayıt bulunmuyor",
                "infoFiltered": "(toplam _MAX_ kayıttan filtrelendi)",
                "search": "Ara:",
                "paginate": {
                    "next": "Sonraki",
                    "previous": "Önceki"
                }
            }
        });
        $('#editItemModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget); // Modal tetikleyicisi
            var itemId = button.data('id');
            var itemName = button.data('name');
            var itemPrice = parseFloat(button.data('price')) || 0; // Sayıya dönüştür, yoksa 0 kullan
            var paidAmount = parseFloat(button.data('paidamount')) || 0; // Sayıya dönüştür, yoksa 0 kullan
            var paymentDate = button.data('paymentdate');

            var modal = $(this);
            modal.find('#editEmployeeItemId').val(itemId);
            modal.find('#editItemName').val(itemName);
            modal.find('#editPrice').val(itemPrice.toFixed(2)); // İki ondalıklı format
            modal.find('#editPaidAmount').val(paidAmount.toFixed(2)); // İki ondalıklı format
            modal.find('#editItemPrice').val(itemPrice.toFixed(2));
            // Tarih formatlama
            if (Date.parse(paymentDate)) {
                modal.find('#editPaymentDate').val(new Date(paymentDate).toISOString().slice(0, 16));
            } else {
                modal.find('#editPaymentDate').val(''); // Geçerli değilse boş bırak
            }
        });
        $('#saveEditButton').on('click', function () {
            var formData = $('#editItemForm').serialize();
            $.ajax({
                url: '/EmployeeDebt/EditEmployeeItem',
                type: 'POST',
                data: formData,
                success: function () {
                    $('#editItemModal').modal('hide'); // Modal'ı kapat
                    location.reload();
                },
                error: function (xhr, status, error) {
                    alert('An error occurred: ' + error);
                }
            });
        });
    });

    function deleteItem(id) {
        if (confirm('Bu öğeyi silmek istediğinize emin misiniz?')) {
            $.ajax({
                url: '/EmployeeDebt/DeleteEmployeeItem', // Silme işlemi için uygun URL
                type: 'POST',
                data: { id: id },
                success: function (result) {
                    location.reload(); // Sayfayı yeniden yükle
                },
                error: function (xhr, status, error) {
                    alert('Bir hata oluştu: ' + error);
                }
            });
        }
    }
</script>
